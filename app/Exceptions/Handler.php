<?php

namespace App\Exceptions;

use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Database\QueryException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Support\Facades\Log;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * The list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     */
    public function register(): void
    {


        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function report(Throwable $e)
    {
//        echo 123;

        //資料更新，根據ID去find找不到資料
        if ($e instanceof ModelNotFoundException) {
//            Log::withContext([
//                'withContext' => "我是withContext",
//            ]);
//            Log::shareContext([
//                'shareContext' => "我是shareContext",
//            ]);
//            Log::debug('這是紀錄錯誤訊息');
            //範本
            Log::shareContext([
                'shareContext' => "我是API回應的LOG，相信我!",
            ]);
            Log::channel('API_LOG')->info('如果是API溝通的LOG，要這樣存入?');
        }

        return parent::report($e); // TODO: Change the autogenerated stub
    }

    public function render($request, Throwable $e)
    {
//        dd($e);
        //資料庫無法連線
        if ($e instanceof QueryException ) {
            dd("Bill做的範例，Handle錯誤：".$e->getMessage());
        }
        //資料更新，根據ID去find找不到資料
        if ($e instanceof ModelNotFoundException) {
            dd("Bill做的範例，Handle錯誤：".$e->getMessage());
//            return view();
        }

        return parent::render($request, $e);
    }
}
